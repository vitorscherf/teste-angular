"use strict";

angular.module("app", ["ui.router", "ngAnimate"]);
"use strict";

angular.module("app").constant("env", {
  apiUrl: "https://gateway.marvel.com:443/v1/public"
});
"use strict";

angular.module("app").config(["$stateProvider", "$urlRouterProvider", function ($stateProvider, $urlRouterProvider) {
  $stateProvider.state("home", {
    url: "/home",
    templateUrl: "public/home/home.template.html"
  }).state("details", {
    url: "/details/:characterId",
    templateUrl: "public/character-details-container/characterDetailsContainer.html",
    params: {
      characterId: null
    }
  });
  $urlRouterProvider.otherwise("/home");
}]);
"use strict";

angular.module("app").controller("CharacterDetailsController", ["$stateParams", CharacterDetailsController]);

function CharacterDetailsController($stateParams) {
  var vm = this;
  vm.characterId = $stateParams.characterId;

  console.log("CharacterDetailsController", vm.characterId);
}
"use strict";

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

angular.module("app").controller("HomeController", ["CharactersService", "$state", HomeController]);

function HomeController(charactersService, $state) {
  var vm = this;
  vm.characters = [];
  vm.searchName = "";
  vm.offset = 0;

  vm.limits = [5, 10, 20];
  vm.limit = vm.limits[2];
  vm.totalItems = 0;
  vm.search = function () {
    vm.offset = 0;
    vm.getCharacters(true);
    window.scrollTo({
      top: 0,
      behavior: "smooth"
    });
  };

  vm.getCharacters = function (reset) {
    charactersService.getAllCharacters(vm.searchName, vm.offset, vm.limit).then(function (response) {
      vm.totalItems = response.data.data.total;
      if (reset) {
        vm.characters = response.data.data.results;
      } else {
        vm.characters = [].concat(_toConsumableArray(vm.characters), _toConsumableArray(response.data.data.results));
      }
    }).catch(function (error) {
      console.log(error);
    });
  };

  vm.seeDetails = function (character) {
    console.log("Informação", character);
    $state.go("details", { characterId: character.id });
  };

  vm.switchLimit = function (limit) {
    vm.limit = limit;
  };

  vm.seeMore = function () {
    vm.offset += vm.limit;
    vm.getCharacters();
  };
}
"use strict";

angular.module("app").service("CharactersService", function ($http, env) {
  this.getAllCharacters = function (name, offset, limit) {
    var params = {
      apikey: "00c502c2b771a984e4cb31fea3921b14",
      hash: "6a16c993302911bceb2491e49926426b",
      ts: 1,
      offset: offset,
      limit: limit
    };

    if (name != null && name != "" && name != undefined) {
      params["nameStartsWith"] = name;
    }

    return $http.get(env.apiUrl + "/characters", {
      params: params
    });
  };
});
"use strict";

angular.module("app").component("appheader", {
    templateUrl: "public/features/characters/components/header/header.html"
});
"use strict";

angular.module("app").component("listCharacterItem", {
  bindings: {
    character: "<",
    seeDetails: "&"
  },
  templateUrl: "public/features/characters/components/list-character-item/listCharacters.html",
  controller: function controller() {},
  controllerAs: "ctrl"
});